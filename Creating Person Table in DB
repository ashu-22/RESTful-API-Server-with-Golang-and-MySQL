Creating Person Table in DB

Now let us write a migration file in Go to create Person table in gotest.
package main

import (
	"database/sql"
	"fmt"
	_ "github.com/go-sql-driver/mysql"
)

func main() {
	db, err := sql.Open("mysql", "root:passapp@tcp(127.0.0.1:3306)/gotest")
	if err != nil {
		fmt.Println(err.Error())
	}
	defer db.Close()
	// make sure connection is available
	err = db.Ping()
	if err != nil {
		fmt.Println(err.Error())
	}

	stmt, err := db.Prepare("CREATE TABLE person (id int NOT NULL AUTO_INCREMENT, first_name varchar(40), last_name varchar(40), PRIMARY KEY (id));")
	if err != nil {
		fmt.Println(err.Error())
	}
	_, err = stmt.Exec()
	if err != nil {
		fmt.Println(err.Error())
	} else {
		fmt.Println("Person Table successfully migrated....")
	}
}
view raw
migrate_person.go hosted with ‚ù§ by GitHub

Here only line no's 10, 21 and 25 are interesting. Others are just error handling statements. One notable point here is we are actually pinging server using db.Ping() to find out whether DB is reachable. "sql.Open" do not give any error if the machine is not accessible. So we should ping and confirm it.
